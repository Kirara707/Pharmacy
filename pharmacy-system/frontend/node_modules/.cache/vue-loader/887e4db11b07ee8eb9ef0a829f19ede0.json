{"remainingRequest":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\src\\views\\Users.vue?vue&type=style&index=0&id=68be103e&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\src\\views\\Users.vue","mtime":1750158434869},{"path":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1750139102512},{"path":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1750139102451},{"path":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1750139102360},{"path":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1750139103810},{"path":"C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1750139102365}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudXNlcnMtY29udGFpbmVyIHsNCiAgcGFkZGluZzogMjBweDsNCn0NCg0KLmhlYWRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmRpYWxvZy1mb290ZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOw0KICBnYXA6IDEwcHg7DQp9DQoNCjpkZWVwKC5lbC1pbnB1dF9fd3JhcHBlcikgew0KICBoZWlnaHQ6IDQ0cHg7DQp9DQoNCjpkZWVwKC5lbC1zZWxlY3QpIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQoNCjpkZWVwKC5lbC1zZWxlY3QgLmVsLWlucHV0X193cmFwcGVyKSB7DQogIGhlaWdodDogNDRweDsNCn0NCg0KOmRlZXAoLmVsLWZvcm0taXRlbV9fZXJyb3IpIHsNCiAgcGFkZGluZy10b3A6IDRweDsNCn0NCg0KOmRlZXAoLmVsLWlucHV0X19pbm5lcikgew0KICBmb250LXNpemU6IDE0cHg7DQp9DQo="},{"version":3,"sources":["C:\\Users\\lizhe\\Desktop\\database\\pharmacy-system\\frontend\\src\\views\\Users.vue"],"names":[],"mappings":";AAySA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACX;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB","file":"C:/Users/lizhe/Desktop/database/pharmacy-system/frontend/src/views/Users.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"users-container\">\r\n    <div class=\"header\">\r\n      <h2>用户管理</h2>\r\n      <el-button type=\"primary\" @click=\"showAddDialog\" v-if=\"canAddUser\">\r\n        添加用户\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"users\"\r\n      style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" />\r\n      <el-table-column prop=\"role\" label=\"角色\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"getRoleType(scope.row.role)\">\r\n            {{ getRoleName(scope.row.role) }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"created_at\" label=\"创建时间\">\r\n        <template #default=\"scope\">\r\n          {{ new Date(scope.row.created_at).toLocaleString() }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" v-if=\"canEditUser\">\r\n        <template #default=\"scope\">\r\n          <el-button\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.row)\"\r\n            v-if=\"canDeleteUser(scope.row)\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加用户对话框 -->\r\n    <el-dialog\r\n      title=\"添加用户\"\r\n      v-model=\"dialogVisible\"\r\n      width=\"500px\">\r\n      <el-form\r\n        :model=\"userForm\"\r\n        :rules=\"rules\"\r\n        ref=\"userFormRef\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input \r\n            v-model=\"userForm.username\" \r\n            placeholder=\"请输入用户名\"\r\n            :prefix-icon=\"User\"\r\n            size=\"large\"\r\n            clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input\r\n            v-model=\"userForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            :prefix-icon=\"Lock\"\r\n            size=\"large\"\r\n            show-password />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\" prop=\"role\">\r\n          <el-select \r\n            v-model=\"userForm.role\" \r\n            placeholder=\"请选择角色\"\r\n            size=\"large\"\r\n            style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"role in availableRoles\"\r\n              :key=\"role.value\"\r\n              :label=\"role.label\"\r\n              :value=\"role.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">\r\n            确定\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { User, Lock } from '@element-plus/icons-vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Users',\r\n  setup() {\r\n    const store = useStore()\r\n    const loading = ref(false)\r\n    const dialogVisible = ref(false)\r\n    const submitLoading = ref(false)\r\n    const userFormRef = ref(null)\r\n    const userForm = reactive({\r\n      username: '',\r\n      password: '',\r\n      role: ''\r\n    })\r\n\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, max: 20, message: '用户名长度应在3-20个字符之间', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, max: 20, message: '密码长度应在6-20个字符之间', trigger: 'blur' }\r\n      ],\r\n      role: [\r\n        { required: true, message: '请选择角色', trigger: 'change' }\r\n      ]\r\n    }\r\n\r\n    const users = computed(() => store.state.users.list)\r\n    const userRole = computed(() => store.state.auth.user?.role)\r\n\r\n    const canAddUser = computed(() => {\r\n      return ['admin', 'pharmacy_admin'].includes(userRole.value)\r\n    })\r\n\r\n    const canEditUser = computed(() => {\r\n      return ['admin', 'pharmacy_admin'].includes(userRole.value)\r\n    })\r\n\r\n    const availableRoles = computed(() => {\r\n      if (userRole.value === 'admin') {\r\n        return [\r\n          { value: 'admin', label: '系统管理员' },\r\n          { value: 'pharmacy_admin', label: '药店管理员' },\r\n          { value: 'salesperson', label: '销售人员' }\r\n        ]\r\n      } else if (userRole.value === 'pharmacy_admin') {\r\n        return [\r\n          { value: 'salesperson', label: '销售人员' }\r\n        ]\r\n      }\r\n      return []\r\n    })\r\n\r\n    const getRoleType = (role) => {\r\n      const types = {\r\n        admin: 'danger',\r\n        pharmacy_admin: 'warning',\r\n        salesperson: 'success'\r\n      }\r\n      return types[role] || 'info'\r\n    }\r\n\r\n    const getRoleName = (role) => {\r\n      const names = {\r\n        admin: '系统管理员',\r\n        pharmacy_admin: '药店管理员',\r\n        salesperson: '销售人员'\r\n      }\r\n      return names[role] || role\r\n    }\r\n\r\n    const canDeleteUser = (user) => {\r\n      if (userRole.value === 'admin') {\r\n        return true\r\n      }\r\n      if (userRole.value === 'pharmacy_admin') {\r\n        return user.role === 'salesperson'\r\n      }\r\n      return false\r\n    }\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        loading.value = true\r\n        await store.dispatch('users/fetchUsers')\r\n      } catch (error) {\r\n        ElMessage.error(error.message)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const showAddDialog = () => {\r\n      // 重置表单数据\r\n      Object.assign(userForm, {\r\n        username: '',\r\n        password: '',\r\n        role: ''\r\n      })\r\n      dialogVisible.value = true\r\n      // 清除表单验证\r\n      setTimeout(() => {\r\n        if (userFormRef.value) {\r\n          userFormRef.value.clearValidate()\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    const handleDelete = async (row) => {\r\n      try {\r\n        await ElMessageBox.confirm('确定要删除这个用户吗？', '警告', {\r\n          type: 'warning'\r\n        })\r\n        \r\n        const token = store.state.auth.token\r\n        const config = {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        }\r\n        \r\n        await axios.delete(`http://localhost:5000/api/users/${row.id}`, config)\r\n        ElMessage.success('删除成功')\r\n        fetchUsers()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          ElMessage.error(error.response?.data?.message || '删除失败')\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      if (!userFormRef.value) return\r\n      \r\n      try {\r\n        // 验证表单\r\n        await userFormRef.value.validate()\r\n        \r\n        submitLoading.value = true\r\n        \r\n        // 设置请求头\r\n        const token = store.state.auth.token\r\n        const config = {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n        \r\n        await axios.post('http://localhost:5000/api/users', userForm, config)\r\n        ElMessage.success('用户添加成功')\r\n        dialogVisible.value = false\r\n        fetchUsers()\r\n      } catch (error) {\r\n        console.error('提交错误:', error)\r\n        if (error.response) {\r\n          ElMessage.error(error.response.data?.message || '操作失败')\r\n        } else if (error.message) {\r\n          ElMessage.error(error.message)\r\n        } else {\r\n          ElMessage.error('请检查输入是否正确')\r\n        }\r\n      } finally {\r\n        submitLoading.value = false\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchUsers()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      users,\r\n      dialogVisible,\r\n      userForm,\r\n      userFormRef,\r\n      rules,\r\n      canAddUser,\r\n      canEditUser,\r\n      availableRoles,\r\n      getRoleType,\r\n      getRoleName,\r\n      canDeleteUser,\r\n      showAddDialog,\r\n      handleDelete,\r\n      handleSubmit,\r\n      submitLoading,\r\n      User,\r\n      Lock\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.users-container {\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n:deep(.el-input__wrapper) {\r\n  height: 44px;\r\n}\r\n\r\n:deep(.el-select) {\r\n  width: 100%;\r\n}\r\n\r\n:deep(.el-select .el-input__wrapper) {\r\n  height: 44px;\r\n}\r\n\r\n:deep(.el-form-item__error) {\r\n  padding-top: 4px;\r\n}\r\n\r\n:deep(.el-input__inner) {\r\n  font-size: 14px;\r\n}\r\n</style> "]}]}